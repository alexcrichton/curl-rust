searchState.loadedDescShard("curl", 0, "Rust bindings to the libcurl C library\nAn error returned from various “easy” operations.\nAn error from “form add” operations.\nAn error from “multi” operations.\nAn iterator over the list of protocols a version supports.\nAn error returned from “share” operations.\nVersion information about libcurl and the capabilities …\nIf available, the human readable version of ares that …\nIf available, the version of ares that libcurl is linked …\nIf available, the version of brotli libcurl is linked …\nIf available, the version of brotli libcurl is linked …\nIf available, the built-in default of CURLOPT_CAINFO.\nIf available, the built-in default of CURLOPT_CAPATH.\nReturns the value of the underlying error corresponding to …\nReturns the value of the underlying error corresponding to …\nReturns the value of the underlying error corresponding to …\nReturns the value of the underlying error corresponding to …\nReturns the general description of this error code, using …\nReturns curl’s human-readable version of this error.\nReturns curl’s human-readable description of this error.\nReturns a human-readable description of this error code.\nBindings to the “easy” libcurl API.\nReturns the extra description of this error, if any is …\nReturns whether libcurl was built with support for Alt-Svc.\nReturns whether libcurl was built with asynchronous name …\nReturns whether libcurl was built with support for Brotli.\nReturns whether libcurl was built with support for …\nReturns whether libcurl was built with debug capabilities\nReturns whether libcurl was built with support for gsasl\nReturns whether libcurl supports HTTP GSSNEGOTIATE\nReturns whether libcurl was built with support for hsts\nReturns whether libcurl was built with support for HTTP2.\nReturns whether libcurl was built with support for HTTP3.\nReturns whether libcurl was built with support for HTTPS …\nReturns whether libcurl was built with support for IDNA, …\nReturns whether libcurl supports IPv6\nReturns whether libcurl was built with large file support\nReturns whether libcurl supports HTTP deflate via libz\nReturns whether libcurl supports HTTP NTLM\nReturns whether libcurl was built with support for NTLM …\nReturns whether libcurl was built with SPNEGO …\nReturns whether libcurl supports SSL\nReturns whether libcurl was built with support for SSPI.\nReturns whether libcurl was built with support for TLS-SRP.\nReturns whether libcurl was built with support for unicode\nReturns whether libcurl was built with support for unix …\nReturns whether libcurl was built with support for zstd\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the libcurl version that this library is currently …\nIf available, the human readable version of hyper\nReturns a human readable string of the host libcurl is …\nIf available, the human readable version of hyper\nIf available, the version of iconv libcurl is linked …\nInitializes the underlying libcurl library.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether this error corresponds to …\nReturns whether this error corresponds to CURLE_AGAIN.\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to CURLM_BAD_HANDLE.\nReturns whether this error corresponds to …\nReturns whether this error corresponds to CURLM_BAD_SOCKET.\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to CURLE_CONV_REQD.\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to CURLE_HTTP2.\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to CURLSHE_IN_USE.\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to CURLSHE_INVALID.\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to CURLSHE_NOMEM.\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to CURLE_READ_ERROR.\nReturns whether this error corresponds to CURLE_RECV_ERROR.\nReturns whether this error corresponds to …\nReturns whether this error corresponds to CURLE_SEND_ERROR.\nReturns whether this error corresponds to …\nReturns whether this error corresponds to CURLE_SSL_CACERT.\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to CURLE_SSL_CIPHER.\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nReturns whether this error corresponds to …\nIf available, the version of libidn that libcurl is linked …\nIf available, the version of libssh that libcurl is linked …\nReturns the version of libz that is used, or None if there …\nMulti - initiating multiple requests simultaneously\nCreates a new error from the underlying code returned by …\nCreates a new error from the underlying code returned by …\nCreates a new error from the underlying code returned by …\nCreates a new error from the underlying code returned by …\nIf available, the version of nghttp2 libcurl is linked …\nIf available, the version of nghttp2 libcurl is linked …\nReturns the libcurl version that this library is currently …\nReturns an iterator over the list of protocols that this …\nIf available, the version of quic libcurl is linked …\nStores some extra information about this error inside this …\nReturns the version of OpenSSL that is used, or None if …\nReturns true if this was built with the vendored version …\nReturns the human readable version string,\nReturns a numeric representation of the version number\nIf avaiable, the numeric zstd version\nIf available, the human readable version of zstd\nIndicates that the connection should be aborted immediately\nWe don’t care what http version to use, and we’d like …\nStructure which stores possible authentication methods to …\nIndicates that although the seek failed libcurl should …\nThe data is protocol data received from the peer.\nThe data is protocol data sent to the peer.\nRaw bindings to a libcurl “easy session”.\nRaw bindings to a libcurl “easy session”.\nIndicates that the seek operation failed, and the entire …\nMultipart/formdata for an HTTP POST request.\nA trait for the various callbacks used by libcurl to …\nThe data is header (or header-like) data received from the …\nThe data is header (or header-like) data sent to the peer.\nPossible values to pass to the <code>http_version</code> method.\nIgnoring <code>.netrc</code> file and use information from url\nPossible data chunks that can be witnessed as part of the …\nPossible values to pass to the <code>ip_resolve</code> method.\nAn iterator over <code>List</code>\nA linked list of a strings\nOptions for <code>.netrc</code> parsing.\nIndicates that the seek operation was a success\nThe  use of your <code>~/.netrc</code> file is optional, and …\nOne part in a multipart upload, added to a <code>Form</code>.\nIndicates that reading should be paused until <code>unpause</code> is …\nIndicates that reading should be paused until <code>unpause</code> is …\nStructure which stores possible post redirection options …\nPossible proxy types that libcurl currently understands.\nPossible error codes that can be returned from the …\nThis value tells the library that use of the file is …\nPossible return values from the <code>seek_function</code> callback.\nThe data is SSL/TLS (binary) data received from the peer.\nThe data is SSL/TLS (binary) data sent to the peer.\nStructure which stores possible ssl options to pass to …\nPossible values to pass to the <code>ssl_version</code> and …\nThe data is informational text.\nPossible conditions for the <code>time_condition</code> method.\nA scoped transfer of information which borrows an <code>Easy</code> and …\nPlease use HTTP 1.0 in the request\nPlease use HTTP 1.1 in the request\nPlease use HTTP 2 in the request (Added in CURL 7.33.0)\nPlease use HTTP 2 without HTTP/1.1 Upgrade (Added in CURL …\nUse version 2 for HTTPS, version 1.1 for HTTP (Added in …\nSetting this value will make libcurl attempt to use HTTP/3 …\nPossible error codes that can be returned from the …\nProvides the ABSTRACT UNIX SOCKET which this handle will …\nSame as <code>Easy2::abstract_unix_socket</code>\nEnables automatic decompression of HTTP downloads.\nSame as <code>Easy2::accept_encoding</code>\nAttempts to add this part to the <code>Form</code> that it was created …\nConfigures the scope for local IPv6 addresses.\nSame as <code>Easy2::address_scope</code>\nTells libcurl to not attempt to use any workarounds for a …\nGet the time until the SSL/SSH handshake is completed\nSame as <code>Easy2::appconnect_time</code>\nAppends some data into this list.\nHTTP Auto authentication.\nTell libcurl to automatically locate and use a client …\nIndicates whether the referer header is automatically …\nSame as <code>Easy2::autoreferer</code>\nProvides AWS V4 signature authentication on HTTP(S) header.\nSame as <code>Easy2::aws_sigv4</code>\nHTTP AWS V4 signature authentication.\nHTTP Basic authentication.\nThis is used to provide a custom file upload part without …\nSpecify the preferred receive buffer size, in bytes.\nSame as <code>Easy2::buffer_size</code>\nSpecify the path to Certificate Authority (CA) bundle\nSame as <code>Easy2::cainfo</code>\nSpecify directory holding CA certificates\nSame as <code>Easy2::capath</code>\nRequest SSL certificate information\nSame as <code>Easy2::certinfo</code>\nConfigure whether to stop when connected to target server\nSame as <code>Easy2::connect_only</code>\nGet the time until connect\nSame as <code>Easy2::connect_time</code>\nTimeout for the connect phase\nSame as <code>Easy2::connect_timeout</code>\nConnect to a specific host and port.\nSame as <code>Easy2::connect_to</code>\nSpecifies extra headers for the form POST section.\nGet the content-length of the download\nSame as <code>Easy2::content_length_download</code>\nUsed in combination with <code>Part::file</code>, provides the …\nGet Content-Type\nSame as <code>Easy2::content_type</code>\nGet Content-Type, in bytes\nSame as <code>Easy2::content_type_bytes</code>\nA pointer to the contents of this part, the actual data to …\nSet the contents of the HTTP Cookie header.\nSame as <code>Easy2::cookie</code>\nSet the file name to read cookies from.\nSame as <code>Easy2::cookie_file</code>\nSet the file name to store cookies to.\nSame as <code>Easy2::cookie_jar</code>\nAdd to or manipulate cookies held in memory.\nSame as <code>Easy2::cookie_list</code>\nStart a new cookie session\nSame as <code>Easy2::cookie_session</code>\nGet all known cookies\nSame as <code>Easy2::cookies</code>\nSpecify a Certificate Revocation List file\nSame as <code>Easy2::crlfile</code>\nSet a custom request string\nSame as <code>Easy2::custom_request</code>\nSpecify a debug callback\nSpecify a debug callback\nSame as <code>Easy::debug_function</code>, just takes a non <code>&#39;static</code> …\nSpecify a debug callback\nHTTP Digest authentication.\nHTTP Digest authentication with an IE flavor.\nSets the timeout of how long name resolves will be kept in …\nSame as <code>Easy2::dns_cache_timeout</code>\nSets the DNS servers that wil be used.\nSame as <code>Easy2::dns_servers</code>\nTells curl to verify the DoH (DNS-over-HTTPS) server’s …\nSame as <code>Easy2::doh_ssl_verify_host</code>\nThis option tells curl to verify the authenticity of the …\nSame as <code>Easy2::doh_ssl_verify_peer</code>\nPass a long as parameter set to 1 to enable or 0 to …\nSame as <code>Easy2::doh_ssl_verify_status</code>\nProvide the DNS-over-HTTPS URL.\nSame as <code>Easy2::doh_url</code>\nGet the number of downloaded bytes\nSame as <code>Easy2::download_size</code>\nGet the last used URL\nSame as <code>Easy2::effective_url</code>\nGet the last used URL, in bytes\nSame as <code>Easy2::effective_url_bytes</code>\nSpecify EGD socket path.\nSame as <code>Easy2::egd_socket</code>\nSet maximum time to wait for Expect 100 request before …\nIndicates whether this library will fail on HTTP response …\nSame as <code>Easy2::fail_on_error</code>\nGet the modification time of the remote resource\nSame as <code>Easy2::fetch_filetime</code>\nMakes this part a file upload part of the given file.\nCauses this file to be read and its contents used as data …\nUsed in combination with <code>Part::file</code>, provides the filename …\nGet the remote time of the retrieved document\nSame as <code>Easy2::filetime</code>\nFollow HTTP 3xx redirects.\nSame as <code>Easy2::follow_location</code>\nMake connection get closed at once after use.\nSame as <code>Easy2::forbid_reuse</code>\nForce a new connection to be used.\nSame as <code>Easy2::fresh_connect</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAsk for a HTTP GET request.\nSame as <code>Easy2::get</code>\nAcquires a reference to the underlying handler for events.\nAcquires a reference to the underlying handler for events.\nHTTP Negotiate (SPNEGO) authentication.\nCallback that receives header data\nCallback that receives header data\nSame as <code>Easy::header_function</code>, just takes a non <code>&#39;static</code> …\nCallback that receives header data\nGet size of retrieved headers\nSame as <code>Easy2::header_size</code>\nAllow HTTP/0.9 compliant responses\nSame as <code>Easy2::http_09_allowed</code>\nSet HTTP server authentication methods to try\nSame as <code>Easy2::http_auth</code>\nGet the CONNECT response code\nSame as <code>Easy2::http_connectcode</code>\nEnable or disable HTTP content decoding.\nSame as <code>Easy2::http_content_decoding</code>\nAdd some headers to this HTTP request.\nSame as <code>Easy2::http_headers</code>\nInform curl whether it should tunnel all operations …\nSame as <code>Easy2::http_proxy_tunnel</code>\nEnable or disable HTTP transfer decoding.\nSame as <code>Easy2::http_transfer_decoding</code>\nSet preferred HTTP version.\nSame as <code>Easy2::http_version</code>\nTells libcurl you want a multipart/formdata HTTP POST to …\nSame as <code>Easy2::httppost</code>\nIgnore the content-length header.\nSame as <code>Easy2::ignore_content_length</code>\nSet the size of the input file to send off.\nSame as <code>Easy2::in_filesize</code>\nTell curl which interface to bind to for an outgoing …\nSame as <code>Easy2::interface</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSpecify which IP protocol version to use\nSame as <code>Easy2::ip_resolve</code>\nSet the issuer SSL certificate filename\nSame as <code>Easy2::issuer_cert</code>\nSet the issuer SSL certificate using an in-memory blob.\nSame as <code>Easy2::issuer_cert_blob</code>\nReturns an iterator over the nodes in this list.\nSet passphrase to private key.\nSame as <code>Easy2::key_password</code>\nGet local IP address of last connection\nSame as <code>Easy2::local_ip</code>\nGet the latest local port number\nSame as <code>Easy2::local_port</code>\nIndicates the number of attempts libcurl will perform to …\nSame as <code>Easy2::local_port_range</code>\nSet the low speed limit in bytes per second.\nSame as <code>Easy2::low_speed_limit</code>\nSet the low speed time period.\nSame as <code>Easy2::low_speed_time</code>\nSet the maximum connection cache size.\nSame as <code>Easy2::max_connects</code>\nConfigure the maximum file size to download.\nSame as <code>Easy2::max_filesize</code>\nRate limit data download speed\nSame as <code>Easy2::max_recv_speed</code>\nSet the maximum number of redirects allowed.\nSame as <code>Easy2::max_redirections</code>\nRate limit data upload speed\nSame as <code>Easy2::max_send_speed</code>\nSet the maximum idle time allowed for a connection.\nSame as <code>Easy2::maxage_conn</code>\nGet the name lookup time\nSame as <code>Easy2::namelookup_time</code>\nTell libcurl to use the operating system’s native CA …\nEnable .netrc parsing\nSame as <code>Easy2::netrc</code>\nCreates a new blank form ready for the addition of new …\nCreates a new “easy” handle which is the core of …\nCreate an empty PostRedirection setting with no flags set.\nCreates a new empty list of strings.\nCreates a new “easy” handle which is the core of …\nCreates a new set of authentications with no members.\nCreates a new set of SSL options.\nTells libcurl to not accept “partial” certificate …\nTells libcurl to disable certificate revocation checks for …\nIndicate whether to download the request without getting …\nSame as <code>Easy2::nobody</code>\nProvide a list of hosts that should not be proxied to.\nSame as <code>Easy2::noproxy</code>\nHTTP NTLM authentication.\nNTLM delegating to winbind helper.\nCallback to open sockets for libcurl.\nCallback to open sockets for libcurl.\nGet errno number from last connect failure.\nSame as <code>Easy2::os_errno</code>\nPrepares adding a new part to this <code>Form</code>\nConfigures the password to pass as authentication for this …\nSame as <code>Easy2::password</code>\nIndicates whether sequences of <code>/../</code> and <code>/./</code> will be …\nSame as <code>Easy2::path_as_is</code>\nSame as <code>Easy::perform</code>.\nAfter options have been set, this will perform the …\nSame as <code>Easy2::perform</code>\nSet pinned public key.\nSame as <code>Easy2::pinned_public_key</code>\nWait for pipelining/multiplexing\nSame as <code>Easy2::pipewait</code>\nConfigures the port number to connect to, instead of the …\nSame as <code>Easy2::port</code>\nMake an HTTP POST request.\nSame as <code>Easy2::post</code>\nConfigures the size of data that’s going to be uploaded …\nSame as <code>Easy2::post_field_size</code>\nConfigures the data that will be uploaded as part of a …\nSame as <code>Easy2::post_field_copy</code>\nSet the policy for handling redirects to POST requests.\nSame as <code>Easy2::post_redirections</code>\nGet the time until the file transfer start\nSame as <code>Easy2::pretransfer_time</code>\nGet IP address of last connection.\nSame as <code>Easy2::primary_ip</code>\nGet the latest destination port number\nSame as <code>Easy2::primary_port</code>\nCallback to progress meter function\nCallback to progress meter function\nIndicates whether a progress meter will be shown for …\nSame as <code>Easy2::progress</code>\nSame as <code>Easy::progress_function</code>, just takes a non <code>&#39;static</code> …\nCallback to progress meter function\nProvide the URL of a proxy to use.\nSame as <code>Easy2::proxy</code>\nSet HTTP proxy authentication methods to try\nSame as <code>Easy2::proxy_auth</code>\nSet CA certificate to verify peer against for proxy.\nSame as <code>Easy2::proxy_cainfo</code>\nSpecify a directory holding CA certificates for proxy.\nSame as <code>Easy2::proxy_capath</code>\nSpecify a Certificate Revocation List file to use when …\nSame as <code>Easy2::proxy_crlfile</code>\nSet the issuer SSL certificate filename for HTTPS proxies\nSame as <code>Easy2::proxy_issuer_cert</code>\nSet the issuer SSL certificate for HTTPS proxies using an …\nSame as <code>Easy2::proxy_issuer_cert_blob</code>\nSet passphrase to private key for HTTPS proxy.\nSame as <code>Easy2::proxy_key_password</code>\nConfigures the proxy password to pass as authentication …\nSame as <code>Easy2::proxy_password</code>\nProvide port number the proxy is listening on.\nSame as <code>Easy2::proxy_port</code>\nSet the SSL Certificate Authorities for HTTPS proxies …\nSame as <code>Easy2::proxy_ssl_cainfo_blob</code>\nSpecify ciphers to use for TLS for an HTTPS proxy.\nSame as <code>Easy2::proxy_ssl_cipher_list</code>\nSet preferred TLS/SSL version with minimum version and …\nSame as <code>Easy2::proxy_ssl_min_max_version</code>\nSet SSL behavior options for proxies\nSame as <code>Easy2::proxy_ssl_options</code>\nVerify the certificate’s name against host for HTTPS …\nSame as <code>Easy2::proxy_ssl_verify_host</code>\nVerify the peer’s SSL certificate for HTTPS proxy.\nSame as <code>Easy2::proxy_ssl_verify_peer</code>\nSet preferred TLS/SSL version when connecting to an HTTPS …\nSame as <code>Easy2::proxy_ssl_version</code>\nSet client certificate for proxy.\nSame as <code>Easy2::proxy_sslcert</code>\nSet the client certificate for the proxy using an …\nSame as <code>Easy2::proxy_sslcert_blob</code>\nSpecify type of the client SSL certificate for HTTPS proxy.\nSame as <code>Easy2::proxy_sslcert_type</code>\nSet private key for HTTPS proxy.\nSame as <code>Easy2::proxy_sslkey</code>\nSet the private key for the proxy using an in-memory blob.\nSame as <code>Easy2::proxy_sslkey_blob</code>\nSet type of the private key file for HTTPS proxy.\nSame as <code>Easy2::proxy_sslkey_type</code>\nIndicates the type of proxy being used.\nSame as <code>Easy2::proxy_type</code>\nConfigures the proxy username to pass as authentication …\nSame as <code>Easy2::proxy_username</code>\nMake an HTTP PUT request.\nSame as <code>Easy2::put</code>\nSpecify a source for random data\nSame as <code>Easy2::random_file</code>\nIndicates the range that this request should retrieve.\nSame as <code>Easy2::range</code>\nGet a pointer to the raw underlying CURL handle.\nSame as <code>Easy2::raw</code>\nRead callback for data uploads.\nRead callback for data uploads.\nSame as <code>Easy::read_function</code>, just takes a non <code>&#39;static</code> …\nRead callback for data uploads.\nReceives data from a connected socket.\nSame as <code>Easy2::recv</code>\nConfigure POST method behaviour on a 301 redirect. Setting …\nConfigure POST method behaviour on a 302 redirect. Setting …\nConfigure POST method behaviour on a 303 redirect. Setting …\nConfigure POST method behaviour for all redirects. Setting …\nGet the number of redirects\nSame as <code>Easy2::redirect_count</code>\nGet the time for all redirection steps\nSame as <code>Easy2::redirect_time</code>\nGet the URL a redirect would go to\nSame as <code>Easy2::redirect_url</code>\nGet the URL a redirect would go to, in bytes\nSame as <code>Easy2::redirect_url_bytes</code>\nSets the HTTP referer header\nSame as <code>Easy2::referer</code>\nGet size of sent request.\nSame as <code>Easy2::request_size</code>\nRe-initializes this handle to the default values.\nSame as <code>Easy2::reset</code>\nSpecify custom host name to IP address resolves.\nSame as <code>Easy2::resolve</code>\nGet the last response code\nSame as <code>Easy2::response_code</code>\nSet a point to resume transfer from\nSame as <code>Easy2::resume_from</code>\nTells libcurl to ignore certificate revocation checks in …\nUser callback for seeking in input stream.\nUser callback for seeking in input stream.\nSame as <code>Easy::seek_function</code>, just takes a non <code>&#39;static</code> …\nUser callback for seeking in input stream.\nSends data over the connected socket.\nSame as <code>Easy2::send</code>\nIndicate which port should be bound to locally for this …\nSame as <code>Easy2::set_local_port</code>\nIndicates whether header information is streamed to the …\nSame as <code>Easy2::show_header</code>\nInform libcurl whether or not it should install signal …\nSame as <code>Easy2::signal</code>\nSet the SSL Certificate Authorities using an in-memory …\nSame as <code>Easy2::ssl_cainfo_blob</code>\nSets the SSL client certificate.\nSame as <code>Easy2::ssl_cert</code>\nSet the SSL client certificate using an in-memory blob.\nSame as <code>Easy2::ssl_cert_blob</code>\nSpecify type of the client SSL certificate.\nSame as <code>Easy2::ssl_cert_type</code>\nSpecify ciphers to use for TLS.\nSame as <code>Easy2::ssl_cipher_list</code>\nCallback to SSL context\nCallback to SSL context\nSame as <code>Easy::ssl_ctx_function</code>, just takes a non <code>&#39;static</code> …\nCallback to SSL context\nSet the SSL engine identifier.\nSame as <code>Easy2::ssl_engine</code>\nMake this handle’s SSL engine the default.\nSame as <code>Easy2::ssl_engine_default</code>\nSpecify private keyfile for TLS and SSL client cert.\nSame as <code>Easy2::ssl_key</code>\nSpecify an SSL private key using an in-memory blob.\nSame as <code>Easy2::ssl_key_blob</code>\nSet type of the private key file.\nSame as <code>Easy2::ssl_key_type</code>\nSet preferred TLS/SSL version with minimum version and …\nSame as <code>Easy2::ssl_min_max_version</code>\nSet SSL behavior options\nSame as <code>Easy2::ssl_options</code>\nEnable or disable use of the SSL session-ID cache\nSame as <code>Easy2::ssl_sessionid_cache</code>\nVerify the certificate’s name against host.\nSame as <code>Easy2::ssl_verify_host</code>\nVerify the peer’s SSL certificate.\nSame as <code>Easy2::ssl_verify_peer</code>\nSet preferred TLS/SSL version.\nSame as <code>Easy2::ssl_version</code>\nGet the time until the first byte is received\nSame as <code>Easy2::starttransfer_time</code>\nReturns the contents of the internal error buffer, if …\nSame as <code>Easy2::take_error_buf</code>\nConfigures whether TCP keepalive probes will be sent.\nSame as <code>Easy2::tcp_keepalive</code>\nConfigures the TCP keepalive idle time wait.\nSame as <code>Easy2::tcp_keepidle</code>\nConfigures the delay between keepalive probes.\nSame as <code>Easy2::tcp_keepintvl</code>\nConfigures whether the TCP_NODELAY option is set, or Nagle…\nSame as <code>Easy2::tcp_nodelay</code>\nSelects a condition for a time request.\nSame as <code>Easy2::time_condition</code>\nGet info on unmet time conditional\nSame as <code>Easy2::time_condition_unmet</code>\nSets the time value for a conditional request.\nSame as <code>Easy2::time_value</code>\nSet maximum time the request is allowed to take.\nSame as <code>Easy2::timeout</code>\nGet total time of previous transfer\nSame as <code>Easy2::total_time</code>\nCreates a new scoped transfer which can be used to set …\nRequest the HTTP Transfer Encoding.\nSame as <code>Easy2::transfer_encoding</code>\nProvides the Unix domain socket which this handle will …\nSame as <code>Easy2::unix_socket</code>\nProvides the Unix domain socket which this handle will …\nSame as <code>Easy2::unix_socket_path</code>\nSame as <code>Easy::unpause_read</code>.\nUnpause reading on a connection.\nSame as <code>Easy2::unpause_read</code>\nSame as <code>Easy::unpause_write</code>\nUnpause writing on a connection.\nSame as <code>Easy2::unpause_write</code>\nSend credentials to hosts other than the first as well.\nSame as <code>Easy2::unrestricted_auth</code>\nSame as <code>Easy::upkeep</code>\nSome protocols have “connection upkeep” mechanisms. …\nSame as <code>Easy2::upkeep</code>\nEnable or disable data upload.\nSame as <code>Easy2::upload</code>\nSpecify the preferred send buffer size, in bytes.\nSame as <code>Easy2::upload_buffer_size</code>\nGet the number of uploaded bytes\nSame as <code>Easy2::upload_size</code>\nProvides the URL which this handle will work with.\nSame as <code>Easy2::url</code>\nURL decodes a string <code>s</code>, returning <code>None</code> if it fails\nSame as <code>Easy2::url_decode</code>\nURL encodes a string <code>s</code>\nSame as <code>Easy2::url_encode</code>\nSets the HTTP user-agent header\nSame as <code>Easy2::useragent</code>\nConfigures the username to pass as authentication for this …\nSame as <code>Easy2::username</code>\nConfigures this handle to have verbose output to help …\nSame as <code>Easy2::verbose</code>\nIndicates whether multiple files will be transferred based …\nSame as <code>Easy2::wildcard_match</code>\nCallback invoked whenever curl has downloaded data for the …\nCallback invoked whenever curl has downloaded data for the …\nSame as <code>Easy::write_function</code>, just takes a non <code>&#39;static</code> …\nSet callback for writing received data.\nWrapper around an easy handle while it’s owned by a …\nWrapper around an easy handle while it’s owned by a …\nNotification of the events that have happened on a socket.\nMessage from the <code>messages</code> function of a multi handle.\nA multi handle for initiating multiple connections …\nA handle that can be used to wake up a thread that’s …\nRaw underlying socket type that the multi handles use\nNotification of events that are requested on a socket.\nFile descriptor to wait on for use with the <code>wait</code> method on …\nInform of reads/writes available data given an action\nAdd an easy handle to a multi session\nSame as <code>add</code>, but works with the <code>Easy2</code> type.\nSame as <code>Easy2::appconnect_time</code>.\nSame as <code>Easy2::appconnect_time</code>.\nSet data to associate with an internal socket\nSame as <code>Easy2::connect_time</code>.\nSame as <code>Easy2::connect_time</code>.\nSame as <code>Easy2::content_length_download</code>.\nSame as <code>Easy2::content_length_download</code>.\nSame as <code>Easy2::content_type</code>.\nSame as <code>Easy2::content_type</code>.\nSame as <code>Easy2::content_type_bytes</code>.\nSame as <code>Easy2::content_type_bytes</code>.\nSame as <code>Easy2::cookies</code>.\nSame as <code>Easy2::cookies</code>.\nSame as <code>Easy2::download_size</code>.\nSame as <code>Easy2::download_size</code>.\nSame as <code>Easy2::effective_url</code>.\nSame as <code>Easy2::effective_url</code>.\nSame as <code>Easy2::effective_url_bytes</code>.\nSame as <code>Easy2::effective_url_bytes</code>.\nSet or unset the whether these events indicate that an …\nExtracts file descriptor information from a multi handle\nSame as <code>Easy2::filetime</code>.\nSame as <code>Easy2::filetime</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAcquires a reference to the underlying handler for events.\nAcquires a reference to the underlying handler for events.\nGet how long to wait for action before proceeding\nSame as <code>Easy2::header_size</code>.\nSame as <code>Easy2::header_size</code>.\nSame as <code>Easy2::http_connectcode</code>.\nSame as <code>Easy2::http_connectcode</code>.\nSet or unset the whether these events indicate that input …\nWait for incoming data. For the socket to become readable.\nWait for incoming and outgoing data. For the socket to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether this easy message was for the specified …\nSame as <code>is_for</code>, but for <code>Easy2Handle</code>.\nSame as <code>Easy2::local_ip</code>.\nSame as <code>Easy2::local_ip</code>.\nSame as <code>Easy2::local_port</code>.\nSame as <code>Easy2::local_port</code>.\nRead multi stack informationals\nSame as <code>Easy2::namelookup_time</code>.\nSame as <code>Easy2::namelookup_time</code>.\nCreates a new multi session through which multiple HTTP …\nCreates a new blank event bit mask.\nConstructs an empty (invalid) WaitFd.\nSame as <code>Easy2::os_errno</code>.\nSame as <code>Easy2::os_errno</code>.\nSet or unset the whether these events indicate that output …\nWait for outgoing data. For the socket to become writable.\nReads/writes available data from each easy handle.\nEnable or disable HTTP pipelining and multiplexing.\nBlock until activity is detected or a timeout passes.\nIndicate that the socket should poll on high priority read …\nIndicate that the socket should poll on read events such …\nIndicate that the socket should poll on write events such …\nSame as <code>Easy2::pretransfer_time</code>.\nSame as <code>Easy2::pretransfer_time</code>.\nSame as <code>Easy2::primary_ip</code>.\nSame as <code>Easy2::primary_ip</code>.\nSame as <code>Easy2::primary_port</code>.\nSame as <code>Easy2::primary_port</code>.\nGet a pointer to the raw underlying CURLM handle.\nGet a pointer to the raw underlying CURL handle.\nGet a pointer to the raw underlying CURL handle.\nAfter a call to <code>wait</code>, returns <code>true</code> if <code>poll_on_priority_read</code>…\nAfter a call to <code>wait</code>, returns <code>true</code> if <code>poll_on_read</code> was set …\nAfter a call to <code>wait</code>, returns <code>true</code> if <code>poll_on_write</code> was …\nSame as <code>Easy2::redirect_count</code>.\nSame as <code>Easy2::redirect_count</code>.\nSame as <code>Easy2::redirect_time</code>.\nSame as <code>Easy2::redirect_time</code>.\nSame as <code>Easy2::redirect_url</code>.\nSame as <code>Easy2::redirect_url</code>.\nSame as <code>Easy2::redirect_url_bytes</code>.\nSame as <code>Easy2::redirect_url_bytes</code>.\nRemove an easy handle from this multi session\nThe specified socket/file descriptor is no longer used by …\nSame as <code>remove</code>, but for <code>Easy2Handle</code>.\nSame as <code>Easy2::request_size</code>.\nSame as <code>Easy2::request_size</code>.\nSame as <code>Easy2::response_code</code>.\nSame as <code>Easy2::response_code</code>.\nIf this message indicates that a transfer has finished, …\nSame as <code>result</code>, except only returns <code>Some</code> for the specified …\nSame as <code>result</code>, except only returns <code>Some</code> for the specified …\nSet the file descriptor to wait for.\nSets the number of max concurrent streams for http2.\nSet size of connection cache.\nSets the max number of connections to a single host.\nSets the max simultaneously open connections.\nSets the pipeline length.\nSets an internal private token for this <code>EasyHandle</code>.\nSame as <code>EasyHandle::set_token</code>\nSet the callback informed about what to wait for\nSame as <code>Easy2::starttransfer_time</code>.\nSame as <code>Easy2::starttransfer_time</code>.\nSame as <code>Easy2::time_condition_unmet</code>.\nSame as <code>Easy2::time_condition_unmet</code>.\nInform libcurl that a timeout has expired and sockets …\nSet callback to receive timeout values\nReturns the token associated with the easy handle that …\nSame as <code>Easy2::total_time</code>.\nSame as <code>Easy2::total_time</code>.\nUnpause reading on a connection.\nUnpause reading on a connection.\nUnpause writing on a connection.\nUnpause writing on a connection.\nBlock until activity is detected or a timeout passes.\nReturns a new MultiWaker that can be used to wake up a …\nWakes up a thread that is blocked in Multi::poll. This …")